trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: 'k8s-dev'
  - name: helmRepoName
    value: 'helm'
  - name: chartName 
    value: 'config'
  - name: helmChartPath 
    value: './storehelmchart/'
  - name: helmChartVersion
    value: '0.1.0'

stages:
  - stage: HelmPackagePush
    displayName: Helm Package and Push
    jobs:
    - job: Helm
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: self

      - task: AzureCLI@2
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |          
            
            echo "Package Helm chart"
            helm package ./$(helmChartPath)/config/ --version $(helmChartVersion)

            echo "Login to ACR for Helm push"
            az acr login -n $(acrName)          

            echo "Enabling OCI support"
            export HELM_EXPERIMENTAL_OCI=1

            echo "Push Helm chart to ACR"
            helm push ./${{ variables.chartName }}-${{ variables.helmChartVersion }}.tgz oci://$(acrName).azurecr.io/$(helmRepoName)               

  - stage: Deploy
    displayName: Deploy to AKS
    dependsOn: HelmPackagePush
    jobs:
    - job: Deploy
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: self

      - script: |
            echo "Installing tar, gzip and build-essential"
            sudo apt update
            sudo apt install tar gzip build-essential
        displayName: Installing tar

      - task: AzureCLI@2
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |          

            echo "Set Helm OCI support"
            export HELM_EXPERIMENTAL_OCI=1

            echo "Login to ACR for Helm push"
            az acr login -n $(acrName) 

            echo "Login to AKS"
            az aks get-credentials --name $(aksCluster) --resource-group $(aksResourceGroup) --overwrite-existing

            echo "Pull Helm chart from ACR"
            helm pull oci://$(acrName).azurecr.io/$(helmRepoName)/$(chartName) --version $(helmChartVersion) --untar
            
      - script: |
            echo "Workspace Directory: $(Pipeline.Workspace)"
            ls -R "$(Pipeline.Workspace)"
        displayName: Workspace Directory

      - task: HelmDeploy@1
        displayName: Helm Upgrade/Install
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscription: $(serviceConnection)
          azureResourceGroup: $(aksResourceGroup)
          kubernetesCluster: $(aksCluster)
          namespace: $(namespace)
          command: upgrade
          chartType: FilePath
          chartPath: './config'
          chartVersion : $(helmChartVersion)
          releaseName: 'config'
          install: true
          waitForExecution: true