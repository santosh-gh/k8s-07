trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: 'k8s-dev'
  - name: chartName 
    value: 'storehelmchart'
  - name: helmChartPath 
    value: './storehelmchart/'
  - name: imageTag
    value: $(Build.BuildId)
  - name: imageName
    value: 'store-front'

stages:
  - stage: Build
    displayName: Build and Publish
    jobs:
      - job: BuildPublishDockerImages
        displayName: Build Publish Docker Images
        steps:
          - task: DockerInstaller@0
            displayName: Install Docker
            inputs:
              dockerVersion: '17.09.0-ce'

          - template: appTemplates/build.yml
            parameters:
              acrServiceConnection: $(acrServiceConnection)
              imageName: $(imageName)
              dockerFilePath: '$(Build.sourcesdirectory)/app/store-front/Dockerfile'
              tag: $(imageTag)

  - stage: HelmPackagePush
    displayName: Helm Package and Push
    jobs:
    - job: Helm
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: self

      - task: AzureCLI@2
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Package Helm chart"
            helm package ./${{ variables.helmChartPath }} --version ${{ variables.helmChartVersion }} -d .

            echo "Login to ACR for Helm push"
            az acr login --name ${{ variables.acrName }}

            sed -i "s/tag:.*/tag: $(imageTag)/" ./${{ variables.helmChartName }}/store-front/values.yaml
            cat ./${{ variables.chartName }}/store-front/values.yaml

            echo "Enabling OCI support"
            export HELM_EXPERIMENTAL_OCI=1

            echo "Push Helm chart to ACR"
            helm push ./${{ variables.chartName }}-${{ variables.helmChartVersion }}.tgz oci://${{ variables.acrName }}.azurecr.io/helm

  - stage: Deploy
    displayName: Deploy to AKS
    dependsOn: HelmPackagePush
    jobs:
    - job: Deploy
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - checkout: self

      - task: AzureCLI@2
        inputs:
          azureSubscription: $(serviceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Set Helm OCI support"
            export HELM_EXPERIMENTAL_OCI=1

            echo "Login to ACR"
            az acr login --name ${{ variables.acrName }}

            echo "Login to AKS"
            az aks get-credentials --name $(aksCluster) --resource-group $(aksResourceGroup) --overwrite-existing

            echo "Pull Helm chart from ACR"
            helm pull oci://${{ variables.acrName }}.azurecr.io/helm/${{ variables.chartName }} --version ${{ variables.helmChartVersion }} --untar

      - task: HelmDeploy@1
        displayName: Helm Upgrade/Install
        inputs:
          connectionType: 'Azure Resource Manager'
          azureSubscription: $(serviceConnection)
          azureResourceGroup: $(aksResourceGroup)
          kubernetesCluster: $(aksCluster)
          namespace: $(namespace)
          command: upgrade
          chartType: FilePath
          chartPath: './${{ variables.chartName }}/store-front/'
          releaseName: 'store-front'
          install: true
          waitForExecution: true